@use '../../../styles/variables.scss' as v;
@use '../../../styles/typography.scss' as t;

// TODO - Add hex colors to variable map to match stationary theme. Do it on Login feature branch rework this.

.loginContainer {
  border: 1px solid #d4b896;
  border-radius: 0.75rem;
  padding: 1.5rem;
  margin: 1.5rem 9.5rem 0;
  background-color: #faf8f3;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);

  @media #{v.$mq-smallScreen} {
    margin: 1.25rem 1rem;
    padding: 1.25rem;
    max-width: 100%;
  }

  h6 {
    font-size: v.$font-size-xl;
    color: #6b5b47;
    margin-bottom: v.$spacing-lg;
    text-align: center;
    font-weight: 600;

    @media #{v.$mq-smallScreen} {
      font-size: calc(v.$font-size-xl * 0.9);
      margin-bottom: v.$spacing-md;
    }
  }
}

.formSection {
  margin-bottom: v.$spacing-lg;

  @media #{v.$mq-smallScreen} {
    margin-bottom: v.$spacing-md;
  }

  label {
    display: block;
    margin-bottom: v.$spacing-xs;
    font-weight: 500;
    color: #8b7355;
  }

  input {
    width: 100%;
    background-color: #fcfbf8;
    color: #8b7355;
    padding: v.$spacing-md;
    border: 1px solid #e6dcc6;
    border-radius: v.$radius-sm;
    font-size: v.$font-size-base;
    transition: border-color v.$transition-standard;

    @media #{v.$mq-smallScreen} {
      padding: v.$spacing-sm;
    }

    &:focus {
      outline: none;
      border-color: map-get(map-get(v.$colors, 'primary'), 'coral');
      box-shadow: 0 0 0 2px rgba(map-get(map-get(v.$colors, 'primary'), 'coral'), 0.2);
    }

    &[aria-invalid="true"] {
      border-color: v.$color-danger-base;
    }
  }

  .errorMessage {
    color: v.$color-danger-base;
    font-size: v.$font-size-xs;
    margin-top: v.$spacing-xs;
  }
}

// TODO - Make a button component specific.
.submitButton {
  width: 100%;
  // background-color: map-get(map-get(v.$colors, 'secondary'), 'terracotta');
  background-color: #b8956a;
  color: t.$ButtonTextColorWhite;
  border: none;
  border-radius: v.$button-radius;
  padding: v.$button-padding-base;
  font-size: v.$button-font-base;
  font-weight: v.$button-font-weight;
  cursor: pointer;
  transition: background-color v.$transition-standard;
  margin-top: v.$spacing-lg;

  @media #{v.$mq-smallScreen} {
    padding: calc(v.$button-padding-base * 0.9);
    margin-top: v.$spacing-md;
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(map-get(map-get(v.$colors, 'secondary'), 'terracotta'), 0.4);
  }
}

.formTitle {
  font-size: v.$font-size-xl;
  color: t.text-color('header');
  margin-bottom: v.$spacing-lg;
  text-align: center;
  font-weight: 600;

  @media #{v.$mq-smallScreen} {
    font-size: calc(v.$font-size-xl * 0.9);
    margin-bottom: v.$spacing-md;
  }
}

// Alert styles for database connection error
.alertContainer {
  margin-bottom: v.$spacing-lg;
  padding: v.$spacing-md;
  background: linear-gradient(180deg, rgba(255, 255, 255, 0.95) 0%, rgba(255, 255, 255, 0.8) 100%);
  border: 1px solid rgba(255, 193, 7, 0.3);
  border-radius: v.$radius-sm;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.alertCard {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  gap: 0.5rem;
}

.alertIcon {
  font-size: 1.5rem;
}

.alertTitle {
  font-size: 1.1rem;
  color: #d97706;
  margin: 0;
  font-weight: 600;
}

.alertMessage {
  color: #92400e;
  margin: 0;
  line-height: 1.4;
  font-size: 0.9rem;
}

.contactInfo {
  color: #78350f;
  font-weight: 500;
  margin: 0;
  font-size: 0.85rem;
}