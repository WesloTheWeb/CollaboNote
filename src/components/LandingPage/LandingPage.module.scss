@use '../../styles/variables.scss' as v;
@use '../../styles/typography.scss' as t;

// Left column gradient background
.leftColumn {
    background: linear-gradient(135deg,
            map-get(map-get(v.$colors, 'primary'), 'coral') 0%,
            map-get(map-get(v.$colors, 'primary'), 'amber') 25%,
            map-get(map-get(v.$colors, 'secondary'), 'terracotta') 75%,
            map-get(map-get(v.$colors, 'secondary'), 'rose') 100%);
    background-size: 200% 200%;
    animation: gradientShift 15s ease infinite;
    min-height: 100vh;
}

// Right column sage background with pattern
.rightColumn {
    background:
        radial-gradient(circle at 25% 25%, rgba(169, 199, 126, 0.3) 3px, transparent 3px),
        radial-gradient(circle at 75% 75%, rgba(169, 199, 126, 0.2) 2px, transparent 2px),
        radial-gradient(circle at 50% 10%, rgba(169, 199, 126, 0.15) 1px, transparent 1px),
        map-get(map-get(v.$colors, 'secondary'), 'sage');
    background-size: 60px 60px, 40px 40px, 20px 20px, 100%;
    min-height: 100vh;
}

@keyframes gradientShift {
    0% {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }

    100% {
        background-position: 0% 50%;
    }
}

.backdrop {
    background-color: #49756557;
}

.welcomeContainer {
    padding: 1.5rem;
    margin: 1.5rem;
    background-color: #f8f8f8;
    border-radius: 0.75rem;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    position: relative;

    @media #{v.$mq-smallScreen} {
        margin: 1rem;
        padding: 1.25rem;
    }

    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 6px;
        height: 100%;
        background: linear-gradient(to bottom,
                map-get(map-get(v.$colors, 'primary'), 'coral'),
                map-get(map-get(v.$colors, 'secondary'), 'terracotta'));
    }
}

.welcomeTitle {
    font-size: v.$font-size-2xl;
    color: t.text-color('header');
    margin-bottom: v.$spacing-md;
    font-weight: 700;
    position: relative;

    @media #{v.$mq-smallScreen} {
        font-size: calc(v.$font-size-2xl * 0.8);
    }

    &::after {
        content: '';
        display: block;
        width: 60px;
        height: 4px;
        background-color: map-get(map-get(v.$colors, 'primary'), 'amber');
        margin-top: v.$spacing-xs;
    }
}

.introContent {
    color: t.text-color('body');
    font-size: v.$font-size-base;
    line-height: 1.6;

    @media #{v.$mq-smallScreen} {
        font-size: calc(v.$font-size-base * 0.95);
    }

    p {
        margin-bottom: v.$spacing-md;
    }

    strong {
        color: map-get(map-get(v.$colors, 'secondary'), 'terracotta');
        font-weight: 600;
    }
}

.featuresList {
    margin-top: v.$spacing-lg;
    padding-left: v.$spacing-lg;

    @media #{v.$mq-smallScreen} {
        margin-top: v.$spacing-md;
        padding-left: v.$spacing-md;
    }

    li {
        margin-bottom: v.$spacing-md;
        position: relative;
        padding-left: v.$spacing-md;

        @media #{v.$mq-smallScreen} {
            margin-bottom: v.$spacing-sm;
        }

        &::before {
            content: '•';
            position: absolute;
            left: 0;
            margin-left: calc(-1 * v.$spacing-md);
            color: map-get(map-get(v.$colors, 'secondary'), 'terracotta');
            font-size: 1.2em;
        }
    }
}

.ctaButton {
    display: inline-block;
    background-color: map-get(map-get(v.$colors, 'primary'), 'coral');
    color: t.$ButtonTextColorWhite;
    padding: v.$spacing-md v.$spacing-lg;
    border-radius: v.$button-radius;
    font-weight: v.$button-font-weight;
    text-decoration: none;
    margin-top: v.$spacing-lg;
    transition: background-color v.$transition-standard;
    border: none;
    cursor: pointer;

    @media #{v.$mq-smallScreen} {
        width: 100%;
        text-align: center;
        padding: v.$spacing-sm v.$spacing-md;
        margin-top: v.$spacing-md;
    }

    &:hover {
        background-color: darken(map-get(map-get(v.$colors, 'primary'), 'coral'), 10%);
    }
}

.welcomeTitle {
    font-size: v.$font-size-2xl;
    color: t.text-color('header');
    margin-bottom: v.$spacing-md;
    font-weight: 700;
    position: relative;

    @media #{v.$mq-smallScreen} {
        font-size: calc(v.$font-size-2xl * 0.8);
    }

    &::after {
        content: '';
        display: block;
        width: 60px;
        height: 4px;
        background-color: map-get(map-get(v.$colors, 'primary'), 'amber');
        margin-top: v.$spacing-xs;
    }
}

.introContent {
    color: t.text-color('body');
    font-size: v.$font-size-base;
    line-height: 1.6;

    @media #{v.$mq-smallScreen} {
        font-size: calc(v.$font-size-base * 0.95);
    }

    p {
        margin-bottom: v.$spacing-md;
    }

    strong {
        color: map-get(map-get(v.$colors, 'secondary'), 'terracotta');
        font-weight: 600;
    }
}

.featuresList {
    margin-top: v.$spacing-lg;
    padding-left: v.$spacing-lg;

    @media #{v.$mq-smallScreen} {
        margin-top: v.$spacing-md;
        padding-left: v.$spacing-md;
    }

    li {
        margin-bottom: v.$spacing-md;
        position: relative;
        padding-left: v.$spacing-md;

        @media #{v.$mq-smallScreen} {
            margin-bottom: v.$spacing-sm;
        }

        &::before {
            content: '•';
            position: absolute;
            left: 0;
            margin-left: calc(-1 * v.$spacing-md);
            color: map-get(map-get(v.$colors, 'secondary'), 'terracotta');
            font-size: 1.2em;
        }
    }
}

.ctaButton {
    display: inline-block;
    background: linear-gradient(135deg,
            map-get(map-get(v.$colors, 'primary'), 'coral'),
            map-get(map-get(v.$colors, 'secondary'), 'terracotta'));
    color: t.$ButtonTextColorWhite;
    padding: v.$spacing-md v.$spacing-lg;
    border-radius: v.$button-radius;
    font-weight: v.$button-font-weight;
    text-decoration: none;
    margin-top: v.$spacing-lg;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
    position: relative;
    overflow: hidden;

    // Add subtle shine effect
    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg,
                transparent,
                rgba(255, 255, 255, 0.2),
                transparent);
        transition: left 0.5s ease;
    }

    @media #{v.$mq-smallScreen} {
        width: 100%;
        text-align: center;
        padding: v.$spacing-sm v.$spacing-md;
        margin-top: v.$spacing-md;
    }

    &:hover {
        transform: translateY(-2px);
        box-shadow:
            0 8px 25px rgba(map-get(map-get(v.$colors, 'primary'), 'coral'), 0.3),
            0 4px 12px rgba(map-get(map-get(v.$colors, 'secondary'), 'terracotta'), 0.2);

        &::before {
            left: 100%;
        }
    }
}